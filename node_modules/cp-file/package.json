{
  "_args": [
    [
      {
        "raw": "cp-file@^3.1.0",
        "scope": null,
        "escapedName": "cp-file",
        "name": "cp-file",
        "rawSpec": "^3.1.0",
        "spec": ">=3.1.0 <4.0.0",
        "type": "range"
      },
      "/Users/toby.jennings/Desktop/uni_work/web_assignment/pizza-app/node_modules/cpy"
    ]
  ],
  "_from": "cp-file@>=3.1.0 <4.0.0",
  "_id": "cp-file@3.2.0",
  "_inCache": true,
  "_location": "/cp-file",
  "_nodeVersion": "4.4.5",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/cp-file-3.2.0.tgz_1469220596115_0.5581651760730892"
  },
  "_npmUser": {
    "name": "sindresorhus",
    "email": "sindresorhus@gmail.com"
  },
  "_npmVersion": "2.15.5",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cp-file@^3.1.0",
    "scope": null,
    "escapedName": "cp-file",
    "name": "cp-file",
    "rawSpec": "^3.1.0",
    "spec": ">=3.1.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/cpy"
  ],
  "_resolved": "https://registry.npmjs.org/cp-file/-/cp-file-3.2.0.tgz",
  "_shasum": "6f83616254624f0ad58aa4aa8d076f026be7e188",
  "_shrinkwrap": null,
  "_spec": "cp-file@^3.1.0",
  "_where": "/Users/toby.jennings/Desktop/uni_work/web_assignment/pizza-app/node_modules/cpy",
  "author": {
    "name": "Sindre Sorhus",
    "email": "sindresorhus@gmail.com",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/cp-file/issues"
  },
  "dependencies": {
    "graceful-fs": "^4.1.2",
    "mkdirp": "^0.5.0",
    "nested-error-stacks": "^1.0.1",
    "object-assign": "^4.0.1",
    "pify": "^2.3.0",
    "pinkie-promise": "^2.0.0",
    "readable-stream": "^2.1.4"
  },
  "description": "Copy a file",
  "devDependencies": {
    "buffer-equals": "^1.0.3",
    "istanbul": "^0.4.0",
    "mocha": "*",
    "rewire": "^2.3.1",
    "rimraf": "^2.3.2",
    "xo": "*"
  },
  "directories": {},
  "dist": {
    "shasum": "6f83616254624f0ad58aa4aa8d076f026be7e188",
    "tarball": "https://registry.npmjs.org/cp-file/-/cp-file-3.2.0.tgz"
  },
  "engines": {
    "node": ">=0.10.0"
  },
  "files": [
    "index.js"
  ],
  "gitHead": "f984b8ec9a46e91faf6f6660e2e6a2f681533ee8",
  "homepage": "https://github.com/sindresorhus/cp-file#readme",
  "keywords": [
    "copy",
    "cp",
    "file",
    "clone",
    "fs",
    "stream",
    "file-system",
    "ncp",
    "fast",
    "quick",
    "data",
    "content",
    "contents"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "Michael Mayer",
      "email": "michael@schnittstabil.de",
      "url": "schnittstabil.de"
    }
  ],
  "name": "cp-file",
  "optionalDependencies": {},
  "readme": "# cp-file [![Build Status](https://travis-ci.org/sindresorhus/cp-file.svg?branch=master)](https://travis-ci.org/sindresorhus/cp-file)\n\n> Copy a file\n\n- Fast by using streams in the async version.\n- Resilient by using [graceful-fs](https://github.com/isaacs/node-graceful-fs).\n- User-friendly by creating non-existent destination directories for you.\n- Can be safe by turning off [overwriting](#optionsoverwrite).\n- User-friendly errors.\n\n\n## Install\n\n```\n$ npm install --save cp-file\n```\n\n\n## Usage\n\n```js\nconst cpFile = require('cp-file');\n\ncpFile('src/unicorn.png', 'dist/unicorn.png').then(() => {\n\tconsole.log('File copied');\n});\n```\n\n\n## API\n\n### cpFile(source, destination, [options])\n\nReturns a `Promise`.\n\n### cpFile.sync(source, destination, [options])\n\n#### source\n\nType: `string`\n\nFile you want to copy.\n\n#### destination\n\nType: `string`\n\nWhere you want the file copied.\n\n#### options\n\nType: `Object`\n\n##### overwrite\n\nType: `boolean`<br>\nDefault: `true`\n\nOverwrite existing file.\n\n### cpFile.on('progress', handler)\n\nProgress reporting. Only available when using the async method.\n\n#### handler(data)\n\nType: `Function`\n\n##### data\n\n```js\n{\n\tsrc: String,\n\tdest: String,\n\tsize: Number,\n\twritten: Number,\n\tpercent: Number\n}\n```\n\n- `src` and `dest` are absolute paths.\n- `size` and `written` are in bytes.\n- `percent` is a value between `0` and `1`.\n\n###### Notes\n\n- For empty files, the `progress` event is emitted only once.\n- The `.on()` method is available only right after the initial `cpFile()` call. So make sure\nyou add a `handler` before `.then()`:\n\n```js\ncpFile(src, dest).on('progress', data => {\n\t// ...\n}).then(() => {\n\t// ...\n})\n```\n\n\n## Related\n\nSee [cpy](https://github.com/sindresorhus/cpy) if you need to copy multiple files or want a CLI.\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/cp-file.git"
  },
  "scripts": {
    "cover": "istanbul cover -x test.js node_modules/mocha/bin/_mocha",
    "test": "xo && mocha"
  },
  "version": "3.2.0"
}
